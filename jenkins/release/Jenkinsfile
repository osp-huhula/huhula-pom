node {	
	
	def MVN_HOME = tool 'maven-3.5.3';
	echo "MVN_HOME = ${MVN_HOME}"
	def JAVA_HOME = tool 'JDK7';
	echo "JAVA_HOME = ${JAVA_HOME}"
	def GIT_HOME = tool 'git';
	echo "GIT_HOME = ${GIT_HOME}"
	
    parameters {
	    string (
	        defaultValue: '0.0.0',
	        description: '',
	        name : 'VERSION_RELEASE	')
	    string (
	        defaultValue: '0.0.0-SNAPSHOT',
	        description: '',
	        name : 'VERSION_DEVELOPMENT')
    }
	stage("Parameters"){
		echo "VERSION_RELEASE : ${VERSION_RELEASE}"
		echo "VERSION_DEVELOPMENT : ${VERSION_DEVELOPMENT}"
		if ("${params.VERSION_RELEASE}" == "" || "${params.VERSION_DEVELOPMENT}" == "") {
	        currentBuild.result = 'ABORTED'
	        error("Not valid values: VERSION_RELEASE(${VERSION_RELEASE}) | VERSION_DEVELOPMENT(${VERSION_DEVELOPMENT})")
		}
		if ("${params.VERSION_RELEASE}" == "0.0.0" || "${params.VERSION_DEVELOPMENT}" == "0.0.0-SNAPSHOT") {
	        currentBuild.result = 'ABORTED'
	        error("Not valid values: VERSION_RELEASE(${VERSION_RELEASE}) | VERSION_DEVELOPMENT(${VERSION_DEVELOPMENT})")
		}
		
	}
	stage("Cleaning"){
	    cleanWs();
	}
	stage("Cheking out (GIT)") {
		checkout scm
	}
	stage("Update all version (super-pom)") {
		if (isUnix()) {
			sh  "mvn versions:set -DnewVersion=${params.VERSION_RELEASE} -f huhula-super-pom/pom.xml -DprocessAllModules -Dmvn.project.location=\"${WORKSPACE}\" "
		} else {
			bat "mvn versions:set -DnewVersion=${params.VERSION_RELEASE} -f ./huhula-super-pom/pom.xml -DprocessAllModules -Dmvn.project.location=\"${WORKSPACE}\" "
		}
	}
	stage("Build (super-pom)") {
		if (isUnix()) {
			sh  "mvn clean deploy site -f huhula-super-pom/pom.xml -Dmvn.project.location=\"${WORKSPACE}\" "
		} else {
			bat "mvn clean deploy site -f ./huhula-super-pom/pom.xml -Dmvn.project.location=\"${WORKSPACE}\" "
		}
	}
	stage("Maven - Deploy (parent-pom)") {
		if (isUnix()) {
			sh  "mvn clean deploy site -Dmvn.project.location=\"${WORKSPACE}\" "
		} else {
			bat "mvn clean deploy site -Dmvn.project.location=\"${WORKSPACE}\" "
		}
	}
	stage("Revert version") {
		if (isUnix()) {
			sh  "mvn -f huhula-super-pom/pom.xml versions:revert -DprocessAllModules -Dmvn.project.location=\"${WORKSPACE}\" "
		} else {
			bat "mvn -f huhula-super-pom/pom.xml versions:revert -DprocessAllModules -Dmvn.project.location=\"${WORKSPACE}\" "
		}		
	}
	stage("Release (dry)") {
		if (isUnix()) {
			sh  "mvn release:clean release:prepare release:perform -Dresume=false -DdryRun=true --batch-mode -Dtag=${VERSION_RELEASE} -DreleaseVersion=${VERSION_RELEASE} -DdevelopmentVersion=${VERSION_DEVELOPMENT} -Dmvn.project.location=\"${WORKSPACE}\" "
		} else {
			bat "mvn release:clean release:prepare release:perform -Dresume=false -DdryRun=true --batch-mode -Dtag=${VERSION_RELEASE} -DreleaseVersion=${VERSION_RELEASE} -DdevelopmentVersion=${VERSION_DEVELOPMENT} -Dmvn.project.location=\"${WORKSPACE}\" "
		}		
	}
	stage("Release") {
		if (isUnix()) {
			sh  "mvn release:clean release:prepare release:perform -Dresume=false -DdryRun=false --batch-mode -Dtag=${VERSION_RELEASE} -DreleaseVersion=${VERSION_RELEASE} -DdevelopmentVersion=${VERSION_DEVELOPMENT} -Dmvn.project.location=\"${WORKSPACE}\" "
		} else {
			bat "mvn release:clean release:prepare release:perform -Dresume=false -DdryRun=false --batch-mode -Dtag=${VERSION_RELEASE} -DreleaseVersion=${VERSION_RELEASE} -DdevelopmentVersion=${VERSION_DEVELOPMENT} -Dmvn.project.location=\"${WORKSPACE}\" "
		}		
	}
	stage("Release - clean") {
		if (isUnix()) {
			sh  "mvn clean deploy -PRELEASE "
		} else {
			bat "mvn clean deploy -PRELEASE "
		}		
	}
}

